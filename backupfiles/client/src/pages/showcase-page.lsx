import { Link } from "wouter";
import { Navbar } from "@/components/navigation/Navbar";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { QRCodeSVG } from "qrcode.react";
import { useState } from "react";
import { motion } from "framer-motion";
import { ParticleBackground } from "@/components/particles/ParticleBackground";

type WebsiteExample = {
  id: string;
  name: string;
  description: string;
  path: string;
  tags: string[];
};

const websiteExamples: WebsiteExample[] = [
  {
    id: "pro-driver-academy",
    name: "Pro Driver Academy",
    description: "Professional CDL training academy website with comprehensive course information and student portal.",
    path: "/projects/pro-driver-academy",
    tags: ["Education", "Professional", "Portal"],
  },
  {
    id: "leolas-library",
    name: "Leola's Digital Library",
    description: "Interactive digital library featuring heartwarming stories and a unique reading experience.",
    path: "/projects/leolas-library",
    tags: ["Library", "Stories", "Interactive"],
  }
];

export default function ShowcasePage() {
  const [flippedCard, setFlippedCard] = useState<string | null>(null);

  // Function to get the full URL for QR codes
  const getQRCodeUrl = (website: WebsiteExample) => {
    // Get the base URL without any path
    const baseUrl = window.location.origin;
    // Remove the /showcase from the current path if it exists
    const currentPath = window.location.pathname.replace('/showcase', '');
    // If we're already in a project path, use that context
    const isInProjectContext = currentPath.startsWith('/projects/');
    // Construct the final URL
    return `${baseUrl}${isInProjectContext ? website.path.replace('/projects', '') : website.path}`;
  };

  // Function to get the logo URL based on website ID
  const getLogoUrl = (websiteId: string) => {
    return `/logos/${websiteId === 'pro-driver-academy' ? 'pda' : 'lee'}-logo.svg`;
  };

  return (
    <div className="min-h-screen">
      <ParticleBackground />
      <div className="content-layer">
        <Navbar />
        <main className="container mx-auto p-4 pt-8">
          <div className="space-y-8">
            <div className="text-center space-y-4">
              <h1 className="text-4xl md:text-5xl font-bold gradient-text">
                Rapid Web Developer
              </h1>
              <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
                Create professional websites instantly with our innovative platform. 
                Preview our showcase projects below.
              </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {websiteExamples.map((website) => (
                <div key={website.id} className="perspective">
                  <motion.div
                    className="relative w-full h-[400px]"
                    animate={{ rotateY: flippedCard === website.id ? 180 : 0 }}
                    transition={{ duration: 0.6 }}
                    style={{ transformStyle: "preserve-3d" }}
                  >
                    {/* Front of card */}
                    <Card className="absolute w-full h-full backface-hidden glass">
                      <CardHeader>
                        <CardTitle className="text-primary">{website.name}</CardTitle>
                      </CardHeader>
                      <CardContent className="space-y-4">
                        <div className="flex justify-center">
                          <QRCodeSVG 
                            value={getQRCodeUrl(website)}
                            size={200}
                            includeMargin={true}
                            level="H"
                            imageSettings={{
                              src: getLogoUrl(website.id),
                              height: 60,
                              width: 60,
                              excavate: true
                            }}
                          />
                        </div>
                        <p className="text-muted-foreground">{website.description}</p>
                        <div className="flex flex-wrap gap-2">
                          {website.tags.map((tag) => (
                            <span
                              key={tag}
                              className="px-2 py-1 bg-primary/10 text-primary rounded-full text-sm"
                            >
                              {tag}
                            </span>
                          ))}
                        </div>
                        <div className="space-y-2">
                          <Button
                            variant="outline"
                            className="w-full hover:bg-primary/20 transition-colors"
                            onClick={() => setFlippedCard(website.id)}
                          >
                            Preview Website
                          </Button>
                          <Link href={website.path}>
                            <Button className="w-full">
                              Visit Website
                            </Button>
                          </Link>
                        </div>
                      </CardContent>
                    </Card>

                    {/* Back of card (Website Preview) */}
                    <Card 
                      className="absolute w-full h-full backface-hidden glass"
                      style={{ transform: "rotateY(180deg)" }}
                    >
                      <CardHeader>
                        <CardTitle className="text-primary">Website Preview</CardTitle>
                      </CardHeader>
                      <CardContent className="space-y-4">
                        <div className="aspect-video bg-muted rounded-lg overflow-hidden">
                          <iframe
                            src={getQRCodeUrl(website)}
                            className="w-full h-full border-none"
                            title={`Preview of ${website.name}`}
                            sandbox="allow-same-origin allow-scripts allow-forms"
                          />
                        </div>
                        <Button
                          variant="outline"
                          className="w-full hover:bg-primary/20 transition-colors"
                          onClick={() => setFlippedCard(null)}
                        >
                          Back to Details
                        </Button>
                      </CardContent>
                    </Card>
                  </motion.div>
                </div>
              ))}
            </div>
          </div>
        </main>
      </div>
    </div>
  );
}